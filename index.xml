<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Portada on PPS GitHub</title><link>http://localhost:1313/</link><description>Recent content in Portada on PPS GitHub</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml"/><item><title>With ToC</title><link>http://localhost:1313/docs/pps/with-toc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/with-toc/</guid><description>Caput vino delphine in tamen vias # Cognita laeva illo fracta # Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.
Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit Natus quaerere # Pectora et sine mulcere, coniuge dum tincta incurvae.</description></item><item><title>Intro</title><link>http://localhost:1313/docs/pps/intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/intro/</guid><description>At me ipso nepotibus nunc celebratior genus # Tanto oblite # Lorem markdownum pectora novis patenti igne sua opus aurae feras materiaque illic demersit imago et aristas questaque posset. Vomit quoque suo inhaesuro clara. Esse cumque, per referri triste. Ut exponit solisque communis in tendens vincetis agisque iamque huic bene ante vetat omina Thebae rates. Aeacus servat admonitu concidit, ad resimas vultus et rugas vultu dignamque Siphnon.
Quam iugulum regia simulacra, plus meruit humo pecorumque haesit, ab discedunt dixit: ritu pharetramque.</description></item><item><title>Tutoriales</title><link>http://localhost:1313/docs/pps/intro/Tutorials/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/intro/Tutorials/</guid><description>Introducción
Los siguientes enlaces son muy apropiados para el seguimiento de la asignatura:
El lenguaje de programación C
explainshell.com
Llamadas al sistema
Introdución al gcc (compilador C)
GCC y Make
Descripción linux man
Linux man on line
Ejemplo de compilación multifuente (link)
Las siguientes órdenes permiten construir un ejecutable a partir de tres archivos fuente y dos librerías
#Compilar bd.c generando objeto bd.o
pepito@mihost:~$gcc –c bd.c –o bd.o
#Compilar motor.</description></item><item><title>Blog</title><link>http://localhost:1313/blog/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/blog/</guid><description>Blog</description></item><item><title>Edición remota en Linux</title><link>http://localhost:1313/docs/pps/intro/EditRemoto/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/intro/EditRemoto/</guid><description>Los siguientes enlaces muestran los pasos necesarios para configurar marcadores remotos con Nautilus:
Conectarse a servidor SSH, FTP, SMB desde Nautilus
Conexión ssh omitiendo la introducción de claves
Obviamente, lo anterior requiere un linux funcionando.&amp;nbsp;En este enlace&amp;nbsp;se describe paso a paso el procedimiento para generar un pendrive con un linux arrancable. He comprobado que funciona con una distro Ubuntu 16.04
Otros enlaces que describen el proceso son&amp;nbsp;este (en español)&amp;nbsp;y este otro (en inglés).</description></item><item><title>Ejercicio Base</title><link>http://localhost:1313/docs/pps/EjBase/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/EjBase/</guid><description>Este ejercicio atiende a los siguientes objetivos:
Entender el paso de argumentos en la línea de orden
Consolidar la idea de programa multisource en C
Presentar los programas auxiliares que se suministran para las prácticas
Presentar formateo de la salida estándar con fprintf()
Presentar los punteros en C
MATERIAL DE APOYO
Lecturas recomendadas:
Guía Rápida del lenguaje C en&amp;nbsp;Tutorials Point
Baúl de Linux
Descarga del material disponible aquí&amp;nbsp;</description></item><item><title>Intro Linux</title><link>http://localhost:1313/docs/pps/intro/Linux/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/intro/Linux/</guid><description>Intro Linux
Para los muy novatos:
Linux Journey
TLDP: Introducción a Linux
Intérprete de comandos (Ahora aplica especialmente&amp;nbsp;Part 1)
Bibliografía Extra
Los siguientes enlaces son muy apropiados para el seguimiento de la asignatura:
The Linux Programming Interface. M. Kerrisk. Descargar caps 1-3
Linux System Programming 2ª Ed. R. Love. O’Reilly
Instalar Linux
https://ubunlog.com/como-crear-un-usb-bootable-de-ubuntu-desde-mac-y-windows/
https://www.xataka.com/basics/como-crear-live-usb-ubuntu-windows-que-guarde-cambios-que-hagas-para-siguiente-sesion</description></item><item><title>Manejo de Ficheros en C</title><link>http://localhost:1313/docs/pps/Ficheros/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/Ficheros/</guid><description>El puntero a un archivo:&amp;nbsp;FILE *fptr;
fptr es un puntero a una estructura que define información sobre un archivo, incluyendo el nombre, el estado y la posición actual en el archivo. Es mantenido por el sistema y resulta clave para el funcionamiento de las funciones de E/S con buffer
El tipo FILE&amp;nbsp;(descriptor de fichero) se define en stdio.h
Los archivos se dicen de texto o binarios según la naturaleza de su contenido
Declaración struct file:
struct file {
mode_t f_mode;
loff_t f_pos;
unsigned short f_flags;
unsigned short f_count;
unsigned long f_reada, f_ramax, f_raend, f_ralen, f_rawin;
struct file *f_next, *f_prev;
int f_owner; /* pid or -pgrp where SIGIO should be sent */
struct inode * f_inode;
struct file_operations * f_op;
unsigned long f_version;
void *private_data; /* needed for tty driver, and maybe others */
};
Resumen de funciones
fopen(): Abre un archivo
fclose(): Cierra un archivo
fgets(): Lee un string
fputs(): Escribe string
ftell(), fseek(): Recorrer archivo
fprintf(): Escribe una salida con formato en el archivo
fscanf(): Lee una entrada con formato desde el archivo
feof(): Cierto si fin del archivo
ferror(): Cierto si se produce un error
rewind(): Se posiciona al principio del mismo
remove(): Borra archivo
fflush(): Vacia archivo
&amp;nbsp;</description></item><item><title>PPS</title><link>http://localhost:1313/pps/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/pps/</guid><description>PPS</description></item><item><title>Primeros Pasos en C</title><link>http://localhost:1313/docs/pps/intro/Primer/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/intro/Primer/</guid><description>Primer Ejemplo
Fundamentos C. Ejemplo 1st.c&amp;nbsp;Click aquí
Secuencia de compilación
Fichero fuente =&amp;gt; editor de archivos (programas)
Compilación =&amp;gt; compilador gcc para general el objeto (código compilado)
Ejecución =&amp;gt; binario, código ejecutable. Ojo a los permisos en Linux
Ejamplos en el fichero compilar.txt
Bloques de programas
Includes, librerías. Definición de macros
Declaración (ojo, distinto de definición) de variables y funciones
Definición de funciones. Código
Función main. Argumentos de programa
Segundo Ejemplo: I/O printf
Descargar archivo fuente de aquí</description></item><item><title>ProgII</title><link>http://localhost:1313/progii/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/progii/</guid><description>ProgII</description></item><item><title>Strings en C</title><link>http://localhost:1313/docs/pps/StringC/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/StringC/</guid><description>NOTAS PREVIAS
Ejercicio ultra sencillo para presentar arrays y strings en C
Se presupone dominio de estructuras iterativas (bucles) y arrays (en el lenguaje que sea)
También se ven las funciones de librería printf(), scanf(), fgets(), strcpy() y strcat()
En todo caso, se recomienda revisar la documentación de todas las funciones (librerías del sistema) utilizadas en el ejercicio
MATERIAL DE APOYO
Enlace de descarga pulsando aquí: StringC.zip
Guías ultra-rápidas:
https://www.</description></item><item><title>Structs &amp;&amp; Union</title><link>http://localhost:1313/docs/pps/Structs/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/Structs/</guid><description>Tutoriales
Los siguientes enlaces son muy apropiados para este tópico de la asignatura:
C structs Tutorialspoint
Wikibooks: Struct y Union en el lenguaje de programación C
Manejo de structs en C
Ejemplo básico
#include&amp;lt;stdio.h&amp;gt;
/* * Definición de un struct StudentData
*/structStudentData{char*stu_name;intstu_id;intstu_age;};intmain(){/* Declaración de una variable struct StudentData */structStudentDatastudent; &amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;com&amp;quot;&amp;gt;/* Definición de valores de los campos de cada miembro */&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;pln&amp;quot;&amp;gt;
student&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;pun&amp;quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;pln&amp;quot;&amp;gt;stu_name &amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;pun&amp;quot;&amp;gt;=&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;pln&amp;quot;&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;str&amp;quot;&amp;gt;&amp;quot;Steve&amp;quot;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;pun&amp;quot;&amp;gt;;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;pln&amp;quot;&amp;gt;
student&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;pun&amp;quot;&amp;gt;.</description></item><item><title>Uncategorised</title><link>http://localhost:1313/uncategorised/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/uncategorised/</guid><description>Uncategorised</description></item><item><title>Uso del man</title><link>http://localhost:1313/docs/pps/intro/ManUse/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/pps/intro/ManUse/</guid><description>Utilizar las páginas del manual
$ man nombre_de_página
Los manuales se ordenan en secciones:
Comandos generales
Llamadas al sistema (funciones provistas por el kernel)
Llamadas a librerías (funciones de la librería de C)
Ficheros especiales (normalmente se encuentran /dev) y controladores
Formatos de archivos y convenciones
Juegos
Miscelánea (incluye convenciones)
Comandos de administración de sistemas (normalmente requiere privilegios de superusuario) y demonios
Librería vs Kernel
OJO, no confundir las líbrerías C con las funciones del kernel.</description></item></channel></rss>